@page "/login"
@inject HttpClient Http
@inject NavigationManager Navigation

<div class="container mt-3" style="max-width: 400px;">
    <EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group mb-3">
            <label>Username</label>
            <InputText class="form-control" @bind-Value="loginModel.Username" />
            <ValidationMessage For="@(() => loginModel.Username)" />
        </div>

        <div class="form-group mb-3">
            <label>Password</label>
            <InputText class="form-control" @bind-Value="loginModel.Password" type="password" />
            <ValidationMessage For="@(() => loginModel.Password)" />
        </div>

        <button class="btn btn-primary w-100" type="submit">Login</button>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger mt-3">@errorMessage</div>
        }
    </EditForm>
</div>

@code {
    private LoginModel loginModel = new();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("auth/login", loginModel);

            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<JwtResponse>();
                await SecureStorage.SetAsync("jwt_token", result!.Token);
                Navigation.NavigateTo("/");
            }
            else
            {
                var error = await response.Content.ReadFromJsonAsync<ApiError>();
                errorMessage = error?.Message ?? "Username ou mot de passe invalid.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Login failed: " + ex.Message;
        }
    }

    public class ApiError
    {
        public string Message { get; set; }
    }

    public class LoginModel
    {    
        public string Username { get; set; }
        public string Password { get; set; }
    }

    public class JwtResponse
    {
        public string Token { get; set; }
    }
}